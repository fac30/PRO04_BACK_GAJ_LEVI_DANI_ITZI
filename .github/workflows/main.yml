name: Deploy to EC2

on:
  push:
    branches:
      - automate

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies and build the project
      run: npm install && npm run build

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "Creating SSH key file..."
        echo "$PRIVATE_KEY" > canvas_collective.pem
        if [ $? -ne 0 ]; then
          echo "Failed to create SSH key file"
          exit 1
        fi

        echo "Setting permissions for SSH key file..."
        chmod 400 canvas_collective.pem
        if [ $? -ne 0 ]; then
          echo "Failed to set permissions for SSH key file"
          exit 1
        fi

        echo "Setting up SSH directory..."
        if [ ! -d ~/.ssh ]; then
          mkdir ~/.ssh
          if [ $? -ne 0 ]; then
            echo "Failed to create SSH directory"
            exit 1
          fi
          chmod 700 ~/.ssh
          if [ $? -ne 0 ]; then
            echo "Failed to set permissions for SSH directory"
            exit 1
          fi
        fi

        echo "Setting up known_hosts file..."
        if [ ! -f ~/.ssh/known_hosts ]; then
          touch ~/.ssh/known_hosts
          if [ $? -ne 0 ]; then
            echo "Failed to create known_hosts file"
            exit 1
          fi
          chmod 644 ~/.ssh/known_hosts
          if [ $? -ne 0 ]; then
            echo "Failed to set permissions for known_hosts file"
            exit 1
          fi
        fi

        echo "Adding host to known_hosts..."
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
        if [ $? -ne 0 ]; then
          echo "Failed to add host to known_hosts"
          exit 1
        fi

        echo "Host: $HOST"
        echo "User: $USER"

    - name: Cleanup
      if: always()
      run: rm -f canvas_collective.pem
